// <auto-generated />
using System;
using FIRMADB_VN.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FIRMADB_VN.Migrations
{
    [DbContext(typeof(FIRMADB_VN_Context))]
    partial class FIRMADB_VN_ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FIRMADB_VN.Models.AmetinimetusteAjalugu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ametinimetused")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AmetinimetusteNimekiriId")
                        .HasColumnType("int");

                    b.Property<int>("AmetisOldudAeg")
                        .HasColumnType("int");

                    b.Property<DateTime>("AmetisseMääramiseKuupäev")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AmetinimetusteNimekiriId");

                    b.ToTable("AmetinimetusteAjalugu");
                });

            modelBuilder.Entity("FIRMADB_VN.Models.AmetinimetusteNimekiri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ametinimetused")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HaruId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HaruId");

                    b.ToTable("AmetinimetusteNimekiri");
                });

            modelBuilder.Entity("FIRMADB_VN.Models.Haigusleht", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("HaigusleAvamiseKuupäev")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HaigusleLõpetamiseKuupäev")
                        .HasColumnType("datetime2");

                    b.Property<int>("HaigusleheKestvusePikkus")
                        .HasColumnType("int");

                    b.Property<string>("LiikHaiguslehtHooldusleht")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TöötajaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TöötajaId");

                    b.ToTable("Haigusleht");
                });

            modelBuilder.Entity("FIRMADB_VN.Models.Haru", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aadress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HaruNimi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegistriKood")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Haru");
                });

            modelBuilder.Entity("FIRMADB_VN.Models.LaenutatavInventar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HaruId")
                        .HasColumnType("int");

                    b.Property<string>("InventariNimetus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kirjeldus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HaruId");

                    b.ToTable("LaenutatavInventar");
                });

            modelBuilder.Entity("FIRMADB_VN.Models.Laenutus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("InventariNimetus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LaenutatavInventarId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LaenutuseAlgus")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LaenutuseLõpp")
                        .HasColumnType("datetime2");

                    b.Property<int>("TöötajaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LaenutatavInventarId");

                    b.HasIndex("TöötajaId");

                    b.ToTable("Laenutus");
                });

            modelBuilder.Entity("FIRMADB_VN.Models.Laps", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Nimi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TöötajaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TöötajaId");

                    b.ToTable("Laps");
                });

            modelBuilder.Entity("FIRMADB_VN.Models.Ligipääsuluba", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AmetinimetusteNimekiriId")
                        .HasColumnType("int");

                    b.Property<DateTime>("KehtivuseAlgus")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("KehtivuseLõpp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Kirjeldus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TöötajaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AmetinimetusteNimekiriId");

                    b.HasIndex("TöötajaId");

                    b.ToTable("Ligipääsuluba");
                });

            modelBuilder.Entity("FIRMADB_VN.Models.Palved", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HaruId")
                        .HasColumnType("int");

                    b.Property<string>("Kirjeldus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Kuupäev")
                        .HasColumnType("datetime2");

                    b.Property<string>("Olek")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TöötajaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HaruId");

                    b.HasIndex("TöötajaId");

                    b.ToTable("Palved");
                });

            modelBuilder.Entity("FIRMADB_VN.Models.Puhkused", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("PuhkuseAlguseKuupäev")
                        .HasColumnType("datetime2");

                    b.Property<string>("PuhkuseLiik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PuhkuseLõpuKuupäev")
                        .HasColumnType("datetime2");

                    b.Property<int>("PuhkusePikkus")
                        .HasColumnType("int");

                    b.Property<int>("TöötajaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TöötajaId");

                    b.ToTable("Puhkused");
                });

            modelBuilder.Entity("FIRMADB_VN.Models.Tervisekontroll", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Abivahendid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("KehtivuseLõpp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Piirangud")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SooritamiseKuupäev")
                        .HasColumnType("datetime2");

                    b.Property<int>("TöötajaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TöötajaId");

                    b.ToTable("Tervisekontroll");
                });

            modelBuilder.Entity("FIRMADB_VN.Models.Töötaja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aadress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AmetinimetusteAjaluguId")
                        .HasColumnType("int");

                    b.Property<string>("ArveldusArve")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HaruId")
                        .HasColumnType("int");

                    b.Property<int>("IdKood")
                        .HasColumnType("int");

                    b.Property<string>("Nimi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TöölepinguAlguseKuupäev")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TöölepinguLõpuKuupäev")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AmetinimetusteAjaluguId");

                    b.HasIndex("HaruId");

                    b.ToTable("Töötaja");
                });

            modelBuilder.Entity("FIRMADB_VN.Models.TöötajaLapsSeos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LapsId")
                        .HasColumnType("int");

                    b.Property<int>("TöötajaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LapsId");

                    b.HasIndex("TöötajaId");

                    b.ToTable("TöötajaLapsSeos");
                });

            modelBuilder.Entity("FIRMADB_VN.Models.Vihjed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HaruId")
                        .HasColumnType("int");

                    b.Property<string>("Kirjeldus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Kuupäev")
                        .HasColumnType("datetime2");

                    b.Property<string>("Olek")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HaruId");

                    b.ToTable("Vihjed");
                });

            modelBuilder.Entity("FIRMADB_VN.Models.AmetinimetusteAjalugu", b =>
                {
                    b.HasOne("FIRMADB_VN.Models.AmetinimetusteNimekiri", "AmetinimetusteNimekiri")
                        .WithMany("AmetinimetusteAjalugu")
                        .HasForeignKey("AmetinimetusteNimekiriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AmetinimetusteNimekiri");
                });

            modelBuilder.Entity("FIRMADB_VN.Models.AmetinimetusteNimekiri", b =>
                {
                    b.HasOne("FIRMADB_VN.Models.Haru", "Haru")
                        .WithMany("AmetinimetusteNimekiri")
                        .HasForeignKey("HaruId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Haru");
                });

            modelBuilder.Entity("FIRMADB_VN.Models.Haigusleht", b =>
                {
                    b.HasOne("FIRMADB_VN.Models.Töötaja", "Töötaja")
                        .WithMany("Haigusleht")
                        .HasForeignKey("TöötajaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Töötaja");
                });

            modelBuilder.Entity("FIRMADB_VN.Models.LaenutatavInventar", b =>
                {
                    b.HasOne("FIRMADB_VN.Models.Haru", "Haru")
                        .WithMany("LaenutatavInventar")
                        .HasForeignKey("HaruId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Haru");
                });

            modelBuilder.Entity("FIRMADB_VN.Models.Laenutus", b =>
                {
                    b.HasOne("FIRMADB_VN.Models.LaenutatavInventar", "LaenutatavInventar")
                        .WithMany("Laenutus")
                        .HasForeignKey("LaenutatavInventarId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FIRMADB_VN.Models.Töötaja", "Töötaja")
                        .WithMany("Laenutus")
                        .HasForeignKey("TöötajaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LaenutatavInventar");

                    b.Navigation("Töötaja");
                });

            modelBuilder.Entity("FIRMADB_VN.Models.Laps", b =>
                {
                    b.HasOne("FIRMADB_VN.Models.Töötaja", "Töötaja")
                        .WithMany()
                        .HasForeignKey("TöötajaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Töötaja");
                });

            modelBuilder.Entity("FIRMADB_VN.Models.Ligipääsuluba", b =>
                {
                    b.HasOne("FIRMADB_VN.Models.AmetinimetusteNimekiri", "AmetinimetusteNimekiri")
                        .WithMany("Ligipääsuluba")
                        .HasForeignKey("AmetinimetusteNimekiriId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FIRMADB_VN.Models.Töötaja", "Töötaja")
                        .WithMany("Ligipääsuluba")
                        .HasForeignKey("TöötajaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AmetinimetusteNimekiri");

                    b.Navigation("Töötaja");
                });

            modelBuilder.Entity("FIRMADB_VN.Models.Palved", b =>
                {
                    b.HasOne("FIRMADB_VN.Models.Haru", "Haru")
                        .WithMany("Palved")
                        .HasForeignKey("HaruId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FIRMADB_VN.Models.Töötaja", "Töötaja")
                        .WithMany("Palved")
                        .HasForeignKey("TöötajaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Haru");

                    b.Navigation("Töötaja");
                });

            modelBuilder.Entity("FIRMADB_VN.Models.Puhkused", b =>
                {
                    b.HasOne("FIRMADB_VN.Models.Töötaja", "Töötaja")
                        .WithMany("Puhkused")
                        .HasForeignKey("TöötajaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Töötaja");
                });

            modelBuilder.Entity("FIRMADB_VN.Models.Tervisekontroll", b =>
                {
                    b.HasOne("FIRMADB_VN.Models.Töötaja", "Töötaja")
                        .WithMany("Tervisekontroll")
                        .HasForeignKey("TöötajaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Töötaja");
                });

            modelBuilder.Entity("FIRMADB_VN.Models.Töötaja", b =>
                {
                    b.HasOne("FIRMADB_VN.Models.AmetinimetusteAjalugu", "AmetinimetusteAjalugu")
                        .WithMany("Töötaja")
                        .HasForeignKey("AmetinimetusteAjaluguId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FIRMADB_VN.Models.Haru", "Haru")
                        .WithMany("Töötaja")
                        .HasForeignKey("HaruId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AmetinimetusteAjalugu");

                    b.Navigation("Haru");
                });

            modelBuilder.Entity("FIRMADB_VN.Models.TöötajaLapsSeos", b =>
                {
                    b.HasOne("FIRMADB_VN.Models.Laps", "Laps")
                        .WithMany("TöötajaLapsSeos")
                        .HasForeignKey("LapsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FIRMADB_VN.Models.Töötaja", "Töötaja")
                        .WithMany("TöötajaLapsSeos")
                        .HasForeignKey("TöötajaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Laps");

                    b.Navigation("Töötaja");
                });

            modelBuilder.Entity("FIRMADB_VN.Models.Vihjed", b =>
                {
                    b.HasOne("FIRMADB_VN.Models.Haru", "Haru")
                        .WithMany("Vihjed")
                        .HasForeignKey("HaruId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Haru");
                });

            modelBuilder.Entity("FIRMADB_VN.Models.AmetinimetusteAjalugu", b =>
                {
                    b.Navigation("Töötaja");
                });

            modelBuilder.Entity("FIRMADB_VN.Models.AmetinimetusteNimekiri", b =>
                {
                    b.Navigation("AmetinimetusteAjalugu");

                    b.Navigation("Ligipääsuluba");
                });

            modelBuilder.Entity("FIRMADB_VN.Models.Haru", b =>
                {
                    b.Navigation("AmetinimetusteNimekiri");

                    b.Navigation("LaenutatavInventar");

                    b.Navigation("Palved");

                    b.Navigation("Töötaja");

                    b.Navigation("Vihjed");
                });

            modelBuilder.Entity("FIRMADB_VN.Models.LaenutatavInventar", b =>
                {
                    b.Navigation("Laenutus");
                });

            modelBuilder.Entity("FIRMADB_VN.Models.Laps", b =>
                {
                    b.Navigation("TöötajaLapsSeos");
                });

            modelBuilder.Entity("FIRMADB_VN.Models.Töötaja", b =>
                {
                    b.Navigation("Haigusleht");

                    b.Navigation("Laenutus");

                    b.Navigation("Ligipääsuluba");

                    b.Navigation("Palved");

                    b.Navigation("Puhkused");

                    b.Navigation("Tervisekontroll");

                    b.Navigation("TöötajaLapsSeos");
                });
#pragma warning restore 612, 618
        }
    }
}
